apiVersion: nvidia.com/v1
kind: ClusterPolicy
metadata:
  name: gpu-cluster-policy
spec:
  operator:
    defaultRuntime: crio
    runtimeClass: nvidia
    initContainer:
      image: cuda
      repository: nvcr.io/nvidia
      version: 11.2.1-base-ubi8
      imagePullPolicy: IfNotPresent

  psp:
    enabled: false

  mig:
    strategy: single

  daemonsets:
    tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
    priorityClassName: system-node-critical

  validator:
    repository: nvcr.io/nvidia/cloud-native
    image: gpu-operator-validator
    version: devel-ubi8
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    env: []
    args: []
    securityContext:
      privileged: true
      seLinuxOptions:
        level: "s0"
    resources: {}
    plugin:
      env:
        - name: WITH_WORKLOAD
          value: "true"

  driver:
    enabled: true
    repository: nvcr.io/nvidia
    image: driver
    version: "470.57.02"
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    rdma:
      enabled: false
    manager:
      image: k8s-driver-manager
      repository: nvcr.io/nvidia/cloud-native
      version: v0.1.0
      imagePullPolicy: IfNotPresent
      env:
        - name: DRAIN_USE_FORCE
          value: "false"
        - name: DRAIN_POD_SELECTOR_LABEL
          value: ""
        - name: DRAIN_TIMEOUT_SECONDS
          value: "0s"
        - name: DRAIN_DELETE_EMPTYDIR_DATA
          value: "false"
    env: []
    securityContext: {}
    resources: {}
    # private mirror repository configuration
    repoConfig:
      configMapName: ""
      destinationDir: ""
    # vGPU licensing configuration
    licensingConfig:
      configMapName: ""
      nlsEnabled: false
    # vGPU topology daemon configuration
    virtualTopology:
      config: ""

  toolkit:
    enabled: true
    repository: nvcr.io/nvidia/k8s
    image: container-toolkit
    version: 1.6.0-ubi8
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    env: []
    securityContext: {}
    resources: {}

  devicePlugin:
    repository: nvcr.io/nvidia
    image: k8s-device-plugin
    version: v0.9.0-ubi8
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    args: []
    env:
      - name: PASS_DEVICE_SPECS
        value: "true"
      - name: FAIL_ON_INIT_ERROR
        value: "true"
      - name: DEVICE_LIST_STRATEGY
        value: envvar
      - name: DEVICE_ID_STRATEGY
        value: uuid
      - name: NVIDIA_VISIBLE_DEVICES
        value: all
      - name: NVIDIA_DRIVER_CAPABILITIES
        value: all
    securityContext: {}
    resources: {}

  dcgm:
    enabled: true
    repository: nvcr.io/nvidia/cloud-native
    image: dcgm
    version: 2.2.3-ubi8
    imagePullPolicy: IfNotPresent
    hostPort: 5555
    args: []
    env: []
    securityContext: {}
    resources: {}

  dcgmExporter:
    repository: nvcr.io/nvidia/k8s
    image: dcgm-exporter
    version: 2.2.9-2.4.0-ubi8
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    env:
      - name: DCGM_EXPORTER_LISTEN
        value: ":9400"
      - name: DCGM_EXPORTER_KUBERNETES
        value: "true"
      - name: DCGM_EXPORTER_COLLECTORS
        value: "/etc/dcgm-exporter/dcp-metrics-included.csv"
    securityContext: {}
    resources: {}
    # configmap name for custom dcgm metrics
    config:
      name: ""

  gfd:
    repository: nvcr.io/nvidia
    image: gpu-feature-discovery
    version: v0.4.1
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    env:
      - name: GFD_SLEEP_INTERVAL
        value: 60s
      - name: GFD_FAIL_ON_INIT_ERROR
        value: "true"
    securityContext: {}
    resources: {}

  migManager:
    enabled: true
    repository: nvcr.io/nvidia/cloud-native
    image: k8s-mig-manager
    version: v0.1.3-ubi8
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    env:
      - name: WITH_REBOOT
        value: "false"
    securityContext:
      privileged: true
    resources: {}
    config:
      name: ""

  nodeStatusExporter:
    enabled: false
    repository: nvcr.io/nvidia/cloud-native
    image: gpu-operator-validator
    version: devel-ubi8
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    securityContext: {}
    resources: {}
    args: []
    env: []
